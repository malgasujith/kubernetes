KUBERNETES INSTALLATION BY AKA

sudo apt update -y && sudo apt install unzip -y 

install eksctl and kubectl

for eksctl

# for ARM systems, set ARCH to: `arm64`, `armv6` or `armv7`
ARCH=amd64
PLATFORM=$(uname -s)_$ARCH

curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"

# (Optional) Verify checksum
curl -sL "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check

tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz

sudo mv /tmp/eksctl /usr/local/bin



for kubectl 

sudo curl -LO https://s3.us-west-2.amazonaws.com/amazon-eks/1.32.0/2024-12-20/bin/linux/amd64/kubectl
sudo chmod +x /usr/local/bin/kubectl
kubectl version --client

for install awscli 


snap version

snap install aws-cli --classic
sudo snap install aws-cli --classic
aws --version


cluster creation aws script :



eksctl create cluster --name "mycluster" --version 1.28 \
--zones=us-east-1a,us-east-1b,us-east-1c --without-nodegroup


eksctl utils associate-iam-oidc-provider \
--region us-east-1 --cluster mycluster --approve

for node group creation 
 
eksctl create nodegroup --cluster=mycluster --region=us-east-1 \
--name=mycluster-ng-1 --node-type=t2.micro \
--nodes=2 --nodes-min=2 --nodes-max=4 --node-volume-size=20 \
--ssh-access  --ssh-public-key=corp_key \
--managed --asg-access --external-dns-access --full-ecr-access \
--appmesh-access --alb-ingress-access



eksctl get clusters
eksctl get nodegroup --cluster mycluster   ### ClusterName

eksctl delete nodegroup --cluster mycluster --name mycluster-ng-1 ## NodeGroupName

eksctl delete cluster --name=mycluster
